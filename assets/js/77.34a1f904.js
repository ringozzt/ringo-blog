(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{628:function(t,a,s){"use strict";s.r(a);var r=s(13),n=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"字符串方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串方法"}},[t._v("#")]),t._v(" 字符串方法")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://cdn.jsdelivr.net/gh/ringozzt/myPics@main/strFn.webp",alt:"strFn"}}),t._v(" "),s("h3",{attrs:{id:"length"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#length"}},[t._v("#")]),t._v(" length")]),t._v(" "),s("h3",{attrs:{id:"charat-charcodeat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#charat-charcodeat"}},[t._v("#")]),t._v(" charAt() charCodeAt()")]),t._v(" "),s("ul",[s("li",[t._v("charAt() 方法获取到的是指定位置的字符；")]),t._v(" "),s("li",[t._v("charCodeAt()方法获取的是指定位置字符的 Unicode 值。")])]),t._v(" "),s("h2",{attrs:{id:"检索字符串是否包含特定序列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检索字符串是否包含特定序列"}},[t._v("#")]),t._v(" 检索字符串是否包含特定序列")]),t._v(" "),s("h3",{attrs:{id:"indexof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#indexof"}},[t._v("#")]),t._v(" indexOf()")]),t._v(" "),s("p",[t._v("查找某个字符，"),s("strong",[t._v("有则返回第一次匹配到的位置")]),t._v("，否则返回-1")]),t._v(" "),s("h3",{attrs:{id:"lastindexof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lastindexof"}},[t._v("#")]),t._v(" lastIndexOf()")]),t._v(" "),s("p",[t._v("查找某个字符，有则返回最后一次匹配到的位置，否则返回-1")]),t._v(" "),s("h3",{attrs:{id:"includes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#includes"}},[t._v("#")]),t._v(" includes()")]),t._v(" "),s("p",[t._v("判断字符串是否包含指定的子字符串")]),t._v(" "),s("h3",{attrs:{id:"startswith"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#startswith"}},[t._v("#")]),t._v(" startsWith()")]),t._v(" "),s("p",[t._v("检测字符串"),s("strong",[t._v("是否以指定的子字符串开始")])]),t._v(" "),s("h3",{attrs:{id:"endswith"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#endswith"}},[t._v("#")]),t._v(" endsWith()")]),t._v(" "),s("p",[t._v("检测字符串"),s("strong",[t._v("是否是以指定的子字符串结尾")])]),t._v(" "),s("h2",{attrs:{id:"连接多个字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连接多个字符串"}},[t._v("#")]),t._v(" 连接多个字符串")]),t._v(" "),s("h3",{attrs:{id:"concat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concat"}},[t._v("#")]),t._v(" concat")]),t._v(" "),s("p",[t._v("str1.concat(str2, str3...)")]),t._v(" "),s("h2",{attrs:{id:"字符串分割成数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串分割成数组"}},[t._v("#")]),t._v(" 字符串分割成数组")]),t._v(" "),s("h3",{attrs:{id:"split"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#split"}},[t._v("#")]),t._v(" split")]),t._v(" "),s("h2",{attrs:{id:"截取字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#截取字符串"}},[t._v("#")]),t._v(" 截取字符串")]),t._v(" "),s("h3",{attrs:{id:"substr"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#substr"}},[t._v("#")]),t._v(" substr")]),t._v(" "),s("p",[t._v("string.substr(start, ?length)")]),t._v(" "),s("h3",{attrs:{id:"substring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#substring"}},[t._v("#")]),t._v(" substring")]),t._v(" "),s("p",[t._v("string.substring(from, ?to)")]),t._v(" "),s("h3",{attrs:{id:"slice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slice"}},[t._v("#")]),t._v(" slice")]),t._v(" "),s("p",[t._v("一个[a, ?b)的区间，只有 a 就是从 a 开始截取")]),t._v(" "),s("h2",{attrs:{id:"大小写转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#大小写转换"}},[t._v("#")]),t._v(" 大小写转换")]),t._v(" "),s("h3",{attrs:{id:"tolowercase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tolowercase"}},[t._v("#")]),t._v(" toLowerCase")]),t._v(" "),s("h3",{attrs:{id:"touppercase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#touppercase"}},[t._v("#")]),t._v(" toUpperCase")]),t._v(" "),s("h2",{attrs:{id:"字符串模式匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串模式匹配"}},[t._v("#")]),t._v(" 字符串模式匹配")]),t._v(" "),s("h3",{attrs:{id:"replace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#replace"}},[t._v("#")]),t._v(" replace")]),t._v(" "),s("ul",[s("li",[t._v("searchValue：必需。规定子字符串或要替换的模式的 RegExp 对象。如果该值是一个字符串，则将它作为要检索的直接量文本模式，而不是首先被转换为 RegExp 对象。")]),t._v(" "),s("li",[t._v("newValue：必需。一个字符串值。规定了替换文本或生成替换文本的函数。")])]),t._v(" "),s("p",[t._v("string.replace(searchValue, newValue)")]),t._v(" "),s("p",[t._v("如果 regexp 具有全局标志 g，那么 replace() 方法将替换所有匹配的子串。否则，它只替换第一个匹配子串。")]),t._v(" "),s("h3",{attrs:{id:"match"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#match"}},[t._v("#")]),t._v(" match")]),t._v(" "),s("p",[t._v("string.match(regexp)")]),t._v(" "),s("p",[t._v("该方法的参数 regexp 是必需的，规定要匹配的模式的 RegExp 对象。如果该参数不是 RegExp 对象，则需要首先把它传递给 RegExp 构造函数，将其转换为 RegExp 对象。")]),t._v(" "),s("h3",{attrs:{id:"search"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#search"}},[t._v("#")]),t._v(" search")]),t._v(" "),s("p",[t._v("检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串。")]),t._v(" "),s("p",[t._v("其语法如下：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("searchvalue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("注意：")]),t._v(" 要执行忽略大小写的检索，请追加标志 i。该方法不执行全局匹配，它将忽略标志 g，也就是只会返回第一次匹配成功的结果。如果没有找到任何匹配的子串，则返回 -1。")]),t._v(" "),s("p",[s("strong",[t._v("返回值：")]),t._v(" 返回 str 中第一个与 regexp 相匹配的子串的起始位置。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcdef'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("bcd")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出结果：1")]),t._v("\n")])])]),s("h2",{attrs:{id:"移除字符串收尾空白符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#移除字符串收尾空白符"}},[t._v("#")]),t._v(" 移除字符串收尾空白符")]),t._v(" "),s("h3",{attrs:{id:"trim"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#trim"}},[t._v("#")]),t._v(" trim")]),t._v(" "),s("p",[t._v("移除字符串首尾空白符，该方法不会改变原始字符串，需要接收 str.trim()的返回值")]),t._v(" "),s("h3",{attrs:{id:"trimstart"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#trimstart"}},[t._v("#")]),t._v(" trimStart")]),t._v(" "),s("p",[s("strong",[t._v("从原始字符串的开头删除了空白的新字符串")]),t._v("，不会修改原始字符串")]),t._v(" "),s("h3",{attrs:{id:"trimend"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#trimend"}},[t._v("#")]),t._v(" trimEnd")]),t._v(" "),s("p",[s("strong",[t._v("从原始字符串的结尾删除了空白的新字符串")]),t._v("，不会修改原始字符串")]),t._v(" "),s("h2",{attrs:{id:"获取字符串本身"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取字符串本身"}},[t._v("#")]),t._v(" 获取字符串本身")]),t._v(" "),s("h4",{attrs:{id:"valueof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#valueof"}},[t._v("#")]),t._v(" valueOf")]),t._v(" "),s("h4",{attrs:{id:"tostring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tostring"}},[t._v("#")]),t._v(" toString")]),t._v(" "),s("h2",{attrs:{id:"重复一个字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重复一个字符串"}},[t._v("#")]),t._v(" 重复一个字符串")]),t._v(" "),s("h3",{attrs:{id:"repeat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#repeat"}},[t._v("#")]),t._v(" repeat")]),t._v(" "),s("p",[t._v("repeat() 方法返回一个新字符串，表示将原字符串重复 n 次：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 输出结果："xxx"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 输出结果："hellohello"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'na'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 输出结果：""')]),t._v("\n")])])]),s("h2",{attrs:{id:"补齐字符串长度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补齐字符串长度"}},[t._v("#")]),t._v(" 补齐字符串长度")]),t._v(" "),s("h3",{attrs:{id:"padstart"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#padstart"}},[t._v("#")]),t._v(" padStart")]),t._v(" "),s("p",[t._v("用于头部补全。该方法有两个参数，其中第一个参数是一个数字，表示字符串补齐之后的长度；第二个参数是用来补全的字符串。")]),t._v(" "),s("p",[t._v("如果原字符串的长度，等于或大于指定的最小长度，则返回原字符串：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("padStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ab'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'x'")]),t._v("\n")])])]),s("p",[t._v("如果用来补全的字符串与原字符串，两者的长度之和超过了指定的最小长度，则会截去超出位数的补全字符串：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("padStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ab'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'ababx'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("padStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ab'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'abax'")]),t._v("\n")])])]),s("p",[t._v("如果省略第二个参数，默认使用空格补全长度：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("padStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '   x'")]),t._v("\n")])])]),s("p",[t._v("padStart()的常见用途是为数值补全指定位数，笔者最近做的一个需求就是将返回的页数补齐为三位，比如第 1 页就显示为 001，就可以使用该方法来操作：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("padStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出结果： '001'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'15'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("padStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出结果： '015'")]),t._v("\n")])])]),s("h3",{attrs:{id:"padend"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#padend"}},[t._v("#")]),t._v(" padEnd")]),t._v(" "),s("p",[t._v("用于尾部补全。该方法也是接收两个参数，第一个参数是字符串补全生效的最大长度，第二个参数是用来补全的字符串：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("padEnd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ab'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'xabab'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("padEnd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ab'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'xaba'")]),t._v("\n")])])]),s("h2",{attrs:{id:"字符串转为数字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串转为数字"}},[t._v("#")]),t._v(" 字符串转为数字")]),t._v(" "),s("h3",{attrs:{id:"parseint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parseint"}},[t._v("#")]),t._v(" parseInt")]),t._v(" "),s("p",[t._v("解析一个字符串，并返回一个整数")]),t._v(" "),s("h3",{attrs:{id:"parsefloat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parsefloat"}},[t._v("#")]),t._v(" parseFloat")]),t._v(" "),s("p",[t._v("解析一个字符串，并返回一个浮点数")])])}),[],!1,null,null,null);a.default=n.exports}}]);